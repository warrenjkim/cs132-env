#!/bin/bash

function usage() {
  echo "Usage: $(basename $0) cmd \"[bash command]\""
  echo "       $(basename $0) reset [new_mount_dir]"
  echo "       $(basename $0) [ls | start | stop | remove]"
  echo "       $(basename $0) test [project root] [testcase]"
  echo "       $(basename $0) test [project root] [testcase] [testcase_out]"
  echo "       $(basename $0) run [project root] [testcase]"
  echo "       $(basename $0) gradle [project_root] [gradle command]"
  echo
  echo "* To view the project root(s) mounted to the container, run"
  echo "      $(basename $0) ls"
  echo
  echo "* To start the container, run"
  echo "      $(basename $0) start"
  echo "  - Note: The container is started by default when you run source bin/init"
  echo
  echo "* To stop the container, run"
  echo "      $(basename $0) stop"
  echo
  echo "* To remove the container, run"
  echo "      source $(basename $0) remove"
  echo
  echo "* To reset the container, run"
  echo "      source $(basename $0) reset"
  echo
  ccenv ls

  exit 0
}

function ccenv_test() {
  local hw="$1"
  local in_file="$2"
  local out_file="${3:-"$2.out"}"
  $CS132_ENV_BIN_DIR/utils/test.sh "$hw" "$in_file" "$out_file"
}

function ccenv_cmd() {
  local sh_cmd="$1"
  $CS132_ENV_BIN_DIR/utils/cmd.sh "$sh_cmd"
}

function ccenv_run() {
  local hw="$1"
  local in_file="$2"
  $CS132_ENV_BIN_DIR/utils/run.sh "$hw" "$in_file"
}

function ccenv_sparrow() {
  local type="$1"
  local options="$2"
  local in_file="$3"
  $CS132_ENV_BIN_DIR/utils/sparrow.sh "$type" "$options" "$in_file"
}

function ccenv_venus() {
  local in_file="$1"
  $CS132_ENV_BIN_DIR/utils/venus.sh "$in_file"
}

function main() {
  local cmd="$1"
  shift
  case "$cmd" in
    "test")
      ccenv_test "$@"
      ;;
    "cmd")
      ccenv_cmd "$@"
      ;;
    "run")
      ccenv_run "$@"
      ;;
    "gradle")
      $CS132_ENV_BIN_DIR/utils/gradle_cmd.sh "$GRADLE_CMD" "$HW"
      ;;
    "sparrow")
      ccenv_sparrow "$@"
      ;;
    "venus")
      ccenv_venus "$@"
      ;;
    "ls")
      $CS132_ENV_BIN_DIR/utils/ls.sh
      ;;
    "start")
      $CS132_ENV_BIN_DIR/utils/start.sh
      ;;
    "stop")
      $CS132_ENV_BIN_DIR/utils/stop.sh
      ;;
    "remove")
      if [[ ${BASH_SOURCE[0]} == "$0" ]]; then
        echo "To run correctly, please source this script by running"
        echo "    source $(basename $0) remove"
        exit 1
      fi
      source $CS132_ENV_BIN_DIR/utils/remove.sh "$VERBOSE"
      ;;
    "reset")
      if [[ ${BASH_SOURCE[0]} == "$0" ]]; then
        echo "To run correctly, please source this script by running"
        echo "    source $(basename $0) reset"
        exit 1
      fi
      source $CS132_ENV_BIN_DIR/utils/reset.sh "$NEW_MOUNT_DIR"
      ;;
    *)
      usage
  esac
}

if [[ ${BASH_SOURCE[0]} != "$0" ]]; then  # only source remove and reset
  if [[ $CMD != "remove" && $CMD != "reset" ]]; then
    echo "This command should not be sourced. Please the command without source"
    echo "    ccenv $CMD ${@:3}"
    return
  fi
fi

main "$@"
